# workflow name
name: Deploy to Amazon EC2 / Spring Boot with Maven

# env variables
env:
  PROJECT_NAME: money-cracker-backend
  BUCKET_NAME: mc-github-actions-be
  CODE_DEPLOY_APP: MC-BE-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP: MC-BE-deploy-group

# trigger
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: CI/CD
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Caching dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Get secrets from AWS Secrets Manager
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          aws secretsmanager get-secret-value --region ${{ secrets.AWS_REGION }} --secret-id prod/env.properties | \
          jq -r ".SecretString" >> src/main/resources/prod-env.properties

      - name: Get Github action IP
        id: publicip
        run: |
          response=$(curl -s canhazip.com)
          echo "ip=$response" >> "$GITHUB_OUTPUT"

      - name: Add IP to EC2 security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} \
          --protocol tcp --port 8080 --cidr ${{ steps.publicip.outputs.ip }}/32

      - name: Add IP to RDS security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.RDS_SECURITY_GROUP_ID }} \
          --protocol tcp --port 3306 --cidr ${{ steps.publicip.outputs.ip }}/32

      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dspring-boot.run.arguments=--spring.config.location=file:src/main/resources/prod-env.properties

      - name: web docker build and push
        run: |
         docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
         docker build -t ${{ secrets.DOCKER_REPO }}/money-cracker-be .
         docker push ${{ secrets.DOCKER_REPO }}/money-cracker-be

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.HOST_ID }}
           username: ubuntu
           script: |
             sudo docker rm -f $(docker ps -qa)
             sudo docker pull ${{ secrets.DOCKER_REPO }}/money-cracker-be
             docker run -p 9000:8080 ${{ secrets.DOCKER_REPO }}/money-cracker-be
             docker image prune -f